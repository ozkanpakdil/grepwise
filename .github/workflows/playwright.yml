name: Playwright E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      actions: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: 25
          github-token: ${{ secrets.GITHUB_TOKEN }}
          distribution: 'graalvm-community'
          native-image-job-reports: 'true'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            playwright/package-lock.json

      - name: Build packaged JAR with frontend
        run: mvn -q clean package -DskipTests

      - name: Start application (JAR with embedded frontend)
        run: |
          nohup java -jar target/*.jar > app.log 2>&1 &
          echo $! > app.pid

      - name: Wait for application to be ready
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/actuator/health >/dev/null 2>&1; then
              echo "Application is up"; exit 0; fi; sleep 2; done
          echo "Application did not start in time"; tail -n 200 app.log; exit 1

      - name: Install Playwright deps and browsers
        working-directory: playwright
        run: |
          npm ci
          npm run install-browsers:ci

      - name: Run Playwright tests
        working-directory: playwright
        env:
          BASE_URL: http://localhost:8080
        continue-on-error: true
        run: npm test 2>&1 | tee playwright.log

      - name: Upload application logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: application-logs-${{ github.run_number }}
          path: |
            app.log
            playwright/playwright.log
          retention-days: 30

      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ github.run_number }}
          path: playwright/playwright-report/
          retention-days: 30

      - name: Prepare test reports for GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        run: |
          mkdir -p gh-pages-content
          
          # Create simple index.html
          cat > gh-pages-content/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Grepwise Test Reports</title>
              <meta charset="utf-8">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; margin: 2rem; }
                  .container { max-width: 800px; margin: 0 auto; }
                  h1 { color: #333; }
                  .report-link { display: block; padding: 1rem; margin: 1rem 0; background: #f8f9fa; border-radius: 8px; text-decoration: none; color: #333; }
                  .report-link:hover { background: #e9ecef; }
                  .timestamp { color: #666; font-size: 0.9em; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üß™ Grepwise Test Reports</h1>
                  <p>All test results for the Grepwise project</p>

                  <h2>Playwright E2E Tests</h2>
                  <a href="./latest/" class="report-link">
                      <strong>üìä Latest Playwright Report</strong><br>
                      <span class="timestamp">Most recent E2E test execution</span>
                  </a>

                  <a href="./archive/" class="report-link">
                      <strong>üìö Playwright Archive</strong><br>
                      <span class="timestamp">Previous E2E test runs</span>
                  </a>

                  <h2>Backend & Frontend Tests</h2>
                  <a href="https://github.com/ozkanpakdil/grepwise/actions/workflows/ci.yml" class="report-link">
                      <strong>üîß JUnit & Unit Test Results</strong><br>
                      <span class="timestamp">View in GitHub Actions CI workflow</span>
                  </a>
                  
                  <hr style="margin: 2rem 0;">
                  <p><small>Generated automatically by <a href="https://github.com/ozkanpakdil/grepwise/actions">GitHub Actions</a></small></p>
              </div>
          </body>
          </html>
          EOF
          
          # Copy latest report
          mkdir -p gh-pages-content/latest/
          cp -r playwright/playwright-report/* gh-pages-content/latest/
          
          # Create archive directory with timestamp
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          mkdir -p gh-pages-content/archive/$TIMESTAMP/
          cp -r playwright/playwright-report/* gh-pages-content/archive/$TIMESTAMP/
          
          # Create archive index
          cat > gh-pages-content/archive/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test Reports Archive - Grepwise</title>
              <meta charset="utf-8">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; margin: 2rem; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .report-item { padding: 1rem; margin: 0.5rem 0; background: #f8f9fa; border-radius: 8px; }
                  a { color: #0066cc; text-decoration: none; }
                  a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üìö Test Reports Archive</h1>
                  <p><a href="../">‚Üê Back to main reports</a></p>
          EOF
          
          # List archive directories
          for dir in gh-pages-content/archive/*/; do
              if [ -d "$dir" ] && [[ "$(basename "$dir")" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}_ ]]; then
                  dirname=$(basename "$dir")
                  echo "                  <div class=\"report-item\">" >> gh-pages-content/archive/index.html
                  echo "                      <a href=\"./$dirname/\"><strong>üìä $dirname</strong></a>" >> gh-pages-content/archive/index.html
                  echo "                  </div>" >> gh-pages-content/archive/index.html
              fi
          done
          
          cat >> gh-pages-content/archive/index.html << 'EOF'
              </div>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages-content
          publish_branch: gh-pages
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy test reports - ${{ github.sha }}'

      - name: Stop application
        if: always()
        run: |
          if [ -f app.pid ]; then kill $(cat app.pid) || true; fi
          echo 'Stopped application'