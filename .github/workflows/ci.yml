name: GrepWise CI

permissions:
  contents: write
  checks: write

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: 25
        github-token: ${{ secrets.GITHUB_TOKEN }}
        distribution: 'graalvm-community'
        native-image-job-reports: 'true'
    
    - name: Build and Test with Maven
      run: mvn -ntp clean verify

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: always()
      with:
        report_paths: '**/target/surefire-reports/TEST-*.xml'
        fail_on_failure: true
        require_tests: true
        check_name: Backend Test Results

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Dependencies
      run: cd frontend && npm ci
    
    - name: Run Tests
      run: cd frontend && npm run test:coverage
      
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: frontend/coverage/

  build-jar:
    name: Build JAR (Boot)
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: 25
          github-token: ${{ secrets.GITHUB_TOKEN }}
          distribution: 'graalvm-community'
          native-image-job-reports: 'true'
      - name: Build Boot JAR
        run: mvn -ntp -DskipTests package
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: grepwise-jar
          path: |
            target/*-SNAPSHOT.jar
          retention-days: 7

  native-build:
    name: Native Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: [backend-tests]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: 25
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - name: Build native
        run: mvn -ntp -Pnative -DskipTests native:compile
      - name: Show target contents
        run: |
          ls target
      - name: Upload Native Artifact
        uses: actions/upload-artifact@v4
        with:
          name: grepwise-native-${{ runner.os }}
          path: |
            target/grepwise
            target/grepwise.exe

  release:
    name: Release
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build-jar, native-build]
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: grepwise-jar
          path: dist
      - name: Download native artifacts (Linux & Windows)
        uses: actions/download-artifact@v4
        with:
          pattern: grepwise-native-*
          merge-multiple: true
          path: dist
      - name: List release assets
        run: ls -la dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
          tag_name: ${{ github.event_name == 'workflow_dispatch' && inputs.tag || github.ref_name }}
          target_commitish: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}